Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sympde.expr     import BilinearForm, LinearForm, integral, Norm
from sympde.expr     import find, EssentialBC
from sympde.topology import ScalarFunctionSpace, Square, Domain, element_of
from sympde.calculus import grad, dot
from sympde.calculus import jump, avg, minus, plus, Dn
from sympde.core     import Constant
from sympde.topology import meshgrid

from sympy import pi, sin

from psydac.api.discretization import discretize

# ... create a domain as meshgrid of a square
import numpy as np

x1 = np.linspace(0., 1., 3)
x2 = np.linspace(0., 1., 4)

domain = meshgrid(x1, x2)
# ...

# one sided approximation of the normal ï¬‚ux on the interface
Dn_I = lambda u: 0.5*(plus(Dn(u)) + minus(Dn(u)))

# internal interafaces of the domain
I = domain.interfaces

kappa = Constant('kappa', is_real=True)

V = ScalarFunctionSpace('V', domain)

x,y = domain.coordinates

u,v = [element_of(V, name=i) for i in ['u', 'v']]

# bilinear form
a = BilinearForm((u,v),
                   integral(domain, dot(grad(u),grad(v)))            
                 + integral(I, kappa * jump(u)*jump(v) - Dn_I(u)*jump(v) - jump(u)*Dn_I(v))
                )

# linear form
f = 2*pi**2*sin(pi*x)*sin(pi*y)
l = LinearForm(v, integral(domain, f*v))

# Dirichlet boundary conditions
bc = [EssentialBC(u, 0, domain.boundary)]

# Variational problem
equation   = find(u, forall=v, lhs=a(u, v), rhs=l(v), bc=bc)
------------------


[31m---------------------------------------------------------------------------[39m
[31mImportError[39m                               Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 7[39m
[32m      5[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01msympde[39;00m[34;01m.[39;00m[34;01mcalculus[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m jump, avg, minus, plus, Dn
[32m      6[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01msympde[39;00m[34;01m.[39;00m[34;01mcore[39;00m[38;5;250m     [39m[38;5;28;01mimport[39;00m Constant
[32m----> [39m[32m7[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01msympde[39;00m[34;01m.[39;00m[34;01mtopology[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m meshgrid
[32m      9[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01msympy[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m pi, sin
[32m     11[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mpsydac[39;00m[34;01m.[39;00m[34;01mapi[39;00m[34;01m.[39;00m[34;01mdiscretization[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m discretize

[31mImportError[39m: cannot import name 'meshgrid' from 'sympde.topology' (/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/sympde/topology/__init__.py)

